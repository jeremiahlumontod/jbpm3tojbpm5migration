////////////////////////////////////////////////////////////////////////
//
// inputSetType.java
//
// This file was generated by XMLSpy 2009sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

package com.jbpm5v2;


public class inputSetType extends com.migration.xml.TypeBase
{
		public static com.migration.xml.meta.ComplexType getStaticInfo() { return new com.migration.xml.meta.ComplexType(com.jbpm5v2.jbpm5v2_TypeInfo.binder.getTypes()[com.jbpm5v2.jbpm5v2_TypeInfo._altova_ti_altova_inputSetType]); }
	
	public inputSetType(org.w3c.dom.Node init)
	{
		super(init);
		instantiateMembers();
	}
	
	private void instantiateMembers()
	{

		dataInputRefs= new MemberElement_dataInputRefs (this, com.jbpm5v2.jbpm5v2_TypeInfo.binder.getMembers()[com.jbpm5v2.jbpm5v2_TypeInfo._altova_mi_altova_inputSetType._dataInputRefs]);
	}
	// Attributes
	public String getValue() 
	{ 
		com.migration.typeinfo.MemberInfo member = com.jbpm5v2.jbpm5v2_TypeInfo.binder.getMembers()[com.jbpm5v2.jbpm5v2_TypeInfo._altova_mi_altova_inputSetType._unnamed];
		return (String)com.migration.xml.XmlTreeOperations.castToString(getNode(), member);
	}
	
	public void setValue(String value)
	{
		com.migration.typeinfo.MemberInfo member = com.jbpm5v2.jbpm5v2_TypeInfo.binder.getMembers()[com.jbpm5v2.jbpm5v2_TypeInfo._altova_mi_altova_inputSetType._unnamed];
		com.migration.xml.XmlTreeOperations.setValue(getNode(), member, value);
	}
	


	// Elements
	
	public MemberElement_dataInputRefs dataInputRefs;

		public static class MemberElement_dataInputRefs
		{
			public static class MemberElement_dataInputRefs_Iterator implements java.util.Iterator
			{
				private org.w3c.dom.Node nextNode;
				private MemberElement_dataInputRefs member;
				public MemberElement_dataInputRefs_Iterator(MemberElement_dataInputRefs member) {this.member=member; nextNode=member.owner.getElementFirst(member.info);}
				public boolean hasNext() 
				{
					while (nextNode != null)
					{
						if (com.migration.xml.TypeBase.memberEqualsNode(member.info, nextNode))
							return true;
						nextNode = nextNode.getNextSibling();
					}
					return false;
				}
				
				public Object next()
				{
					dataInputRefsType nx = new dataInputRefsType(nextNode);
					nextNode = nextNode.getNextSibling();
					return nx;
				}
				
				public void remove () {}
			}
			protected com.migration.xml.TypeBase owner;
			protected com.migration.typeinfo.MemberInfo info;
			public MemberElement_dataInputRefs (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public dataInputRefsType at(int index) {return new dataInputRefsType(owner.getElementAt(info, index));}
			public dataInputRefsType first() {return new dataInputRefsType(owner.getElementFirst(info));}
			public dataInputRefsType last(){return new dataInputRefsType(owner.getElementLast(info));}
			public dataInputRefsType append(){return new dataInputRefsType(owner.createElement(info));}
			public boolean exists() {return count() > 0;}
			public int count() {return owner.countElement(info);}
			public void remove() {owner.removeElement(info);}
			public void removeAt(int index) {owner.removeElementAt(info, index);}
			public java.util.Iterator iterator() {return new MemberElement_dataInputRefs_Iterator(this);}
			public com.migration.xml.meta.Element getInfo() { return new com.migration.xml.meta.Element(info); }
		}

		public void setXsiType() {com.migration.xml.XmlTreeOperations.setAttribute(getNode(), "http://www.w3.org/2001/XMLSchema-instance", "xsi:type", "http://www.w3.org/2001/XMLSchema", "anySimpleType");}
}
