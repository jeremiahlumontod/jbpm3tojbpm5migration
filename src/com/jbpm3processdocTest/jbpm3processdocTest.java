/**
 * jbpm3processdocTest.java
 *
 * This file was generated by XMLSpy 2009sp1 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */

package com.jbpm3processdocTest;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;

import com.jbpm3processdoc.*;

public class jbpm3processdocTest {
	protected static void example() throws Exception {
		//
		// TODO:
		// Insert your code here...
		//
		// Example code to create and save a structure:
		// com.jbpm3processdoc.jbpm3processdoc2 doc =
		// com.jbpm3processdoc.jbpm3processdoc2.createDocument();
		// com.jbpm3processdoc.transitionType root = doc.transition.append();
		// ...
		// doc.saveToFile("jbpm3processdoc1.xml", true);
		//
		// Example code to load and save a structure:
		// com.jbpm3processdoc.jbpm3processdoc2 doc =
		// com.jbpm3processdoc.jbpm3processdoc2.loadFromFile("jbpm3processdoc1.xml");
		// com.jbpm3processdoc.transitionType root = doc.transition.first();
		// ...
		// doc.saveToFile("jbpm3processdoc1.xml", true);

	}

	public static void testInput() {
		try {
			com.jbpm3processdoc.jbpm3processdoc2 doc = com.jbpm3processdoc.jbpm3processdoc2.createDocument();
			//doc = com.jbpm3processdoc.jbpm3processdoc2.loadFromFile("D:/seamprojs/projs/jbpmmodel/src/main/com/jbpmmodel/bp/accountant_Fixed_Asset_Loss_Destruction_or_Theft/processdefinition.xml");
			doc = com.jbpm3processdoc.jbpm3processdoc2.loadFromFile("D:/seamprojs/projs/jbpmmodel/src/main/com/jbpmmodel/bp/Document_Owner_Modifying_a_Process_Document/processdefinition.xml");
			
			if(doc.getNode().hasChildNodes()) {
				
			}
			
			
            //dump xml string
            TransformerFactory transformerFactory;
            Transformer transformer;            
            transformerFactory = TransformerFactory.newInstance();
            transformer = transformerFactory.newTransformer();            
            DOMSource source = new DOMSource(doc.getNode());
            StringWriter buffer = new StringWriter(  );
            PrintWriter out = new PrintWriter(buffer);		
            javax.xml.transform.stream.StreamResult result = new javax.xml.transform.stream.StreamResult(out);
            transformer.transform(source, result);
            String results = buffer.toString(  );
            System.out.println("results\n" + results);            
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	
	
	public static void showJBPM3Doc() {
		try {
			com.jbpm3processdoc.jbpm3processdoc2 doc = com.jbpm3processdoc.jbpm3processdoc2.createDocument();
			doc = com.jbpm3processdoc.jbpm3processdoc2.loadFromFile("D:/seamprojs/projs/jbpmmodel/src/main/com/jbpmmodel/bp/accountant_Fixed_Asset_Loss_Destruction_or_Theft/processdefinition.xml");
            //dump xml string
            TransformerFactory transformerFactory;
            Transformer transformer;            
            transformerFactory = TransformerFactory.newInstance();
            transformer = transformerFactory.newTransformer();            
            DOMSource source = new DOMSource(doc.getNode());
            StringWriter buffer = new StringWriter(  );
            PrintWriter out = new PrintWriter(buffer);		
            javax.xml.transform.stream.StreamResult result = new javax.xml.transform.stream.StreamResult(out);
            transformer.transform(source, result);
            String results = buffer.toString(  );
            System.out.println("results\n" + results);            
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public static void main(String args[]) {
		try {
			System.out.println("jbpm3processdoc Test Application");
			//example();
			showJBPM3Doc();
			System.out.println("OK");
			System.exit(0);
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}
}
