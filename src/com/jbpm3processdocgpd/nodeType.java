////////////////////////////////////////////////////////////////////////
//
// nodeType.java
//
// This file was generated by XMLSpy 2009sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

package com.jbpm3processdocgpd;


public class nodeType extends com.migration.xml.TypeBase
{
		public static com.migration.xml.meta.ComplexType getStaticInfo() { return new com.migration.xml.meta.ComplexType(com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getTypes()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_ti_altova_nodeType]); }
	
	public nodeType(org.w3c.dom.Node init)
	{
		super(init);
		instantiateMembers();
	}
	
	private void instantiateMembers()
	{
		y = new MemberAttribute_y (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._y]);
		x = new MemberAttribute_x (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._x]);
		width = new MemberAttribute_width (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._width]);
		name = new MemberAttribute_name (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._name]);
		height = new MemberAttribute_height (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._height]);

		edge= new MemberElement_edge (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_nodeType._edge]);
	}
	// Attributes
	public MemberAttribute_y y;
		public static class MemberAttribute_y
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_y (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_x x;
		public static class MemberAttribute_x
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_x (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_width width;
		public static class MemberAttribute_width
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_width (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_name name;
		public static class MemberAttribute_name
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_name (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public String getValue() {
				return (String)com.migration.xml.XmlTreeOperations.castToString(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(String value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_height height;
		public static class MemberAttribute_height
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_height (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}


	// Elements
	
	public MemberElement_edge edge;

		public static class MemberElement_edge
		{
			public static class MemberElement_edge_Iterator implements java.util.Iterator
			{
				private org.w3c.dom.Node nextNode;
				private MemberElement_edge member;
				public MemberElement_edge_Iterator(MemberElement_edge member) {this.member=member; nextNode=member.owner.getElementFirst(member.info);}
				public boolean hasNext() 
				{
					while (nextNode != null)
					{
						if (com.migration.xml.TypeBase.memberEqualsNode(member.info, nextNode))
							return true;
						nextNode = nextNode.getNextSibling();
					}
					return false;
				}
				
				public Object next()
				{
					edgeType nx = new edgeType(nextNode);
					nextNode = nextNode.getNextSibling();
					return nx;
				}
				
				public void remove () {}
			}
			protected com.migration.xml.TypeBase owner;
			protected com.migration.typeinfo.MemberInfo info;
			public MemberElement_edge (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public edgeType at(int index) {return new edgeType(owner.getElementAt(info, index));}
			public edgeType first() {return new edgeType(owner.getElementFirst(info));}
			public edgeType last(){return new edgeType(owner.getElementLast(info));}
			public edgeType append(){return new edgeType(owner.createElement(info));}
			public boolean exists() {return count() > 0;}
			public int count() {return owner.countElement(info);}
			public void remove() {owner.removeElement(info);}
			public void removeAt(int index) {owner.removeElementAt(info, index);}
			public java.util.Iterator iterator() {return new MemberElement_edge_Iterator(this);}
			public com.migration.xml.meta.Element getInfo() { return new com.migration.xml.meta.Element(info); }
		}
}
