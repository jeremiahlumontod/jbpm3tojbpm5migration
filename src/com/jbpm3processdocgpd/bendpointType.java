////////////////////////////////////////////////////////////////////////
//
// bendpointType.java
//
// This file was generated by XMLSpy 2009sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

package com.jbpm3processdocgpd;


public class bendpointType extends com.migration.xml.TypeBase
{
		public static com.migration.xml.meta.ComplexType getStaticInfo() { return new com.migration.xml.meta.ComplexType(com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getTypes()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_ti_altova_bendpointType]); }
	
	public bendpointType(org.w3c.dom.Node init)
	{
		super(init);
		instantiateMembers();
	}
	
	private void instantiateMembers()
	{
		w2 = new MemberAttribute_w2 (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_bendpointType._w2]);
		w1 = new MemberAttribute_w1 (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_bendpointType._w1]);
		h2 = new MemberAttribute_h2 (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_bendpointType._h2]);
		h1 = new MemberAttribute_h1 (this, com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo.binder.getMembers()[com.jbpm3processdocgpd.jbpm3processdocgpd_TypeInfo._altova_mi_altova_bendpointType._h1]);

	}
	// Attributes
	public MemberAttribute_w2 w2;
		public static class MemberAttribute_w2
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_w2 (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_w1 w1;
		public static class MemberAttribute_w1
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_w1 (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_h2 h2;
		public static class MemberAttribute_h2
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_h2 (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}
	public MemberAttribute_h1 h1;
		public static class MemberAttribute_h1
		{
			private com.migration.xml.TypeBase owner;
			private com.migration.typeinfo.MemberInfo info; 
			public MemberAttribute_h1 (com.migration.xml.TypeBase owner, com.migration.typeinfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public int getValue() {
				return (int)com.migration.xml.XmlTreeOperations.castToInt(com.migration.xml.XmlTreeOperations.findAttribute(owner.getNode(), info), info);
			}
			public void setValue(int value) {
				com.migration.xml.XmlTreeOperations.setValue(owner.getNode(), info, value);		
			}
			public boolean exists() {return owner.getAttribute(info) != null;}
			public void remove() {owner.removeAttribute(info);} 
			public com.migration.xml.meta.Attribute getInfo() {return new com.migration.xml.meta.Attribute(info);}
		}


	// Elements
}
